declare -a codes

codes[0]="UDRLRRRUULUUDULRULUDRDRURLLDUUDURLUUUDRRRLUUDRUUDDDRRRLRURLLLDDDRDDRUDDULUULDDUDRUUUDLRLLRLDUDUUUUDLDULLLDRLRLRULDDDDDLULURUDURDDLLRDLUDRRULDURDDLUDLLRRUDRUDDDLLURULRDDDRDRRLLUUDDLLLLRLRUULRDRURRRLLLLDULDDLRRRRUDRDULLLDDRRRDLRLRRRLDRULDUDDLDLUULRDDULRDRURRURLDULRUUDUUURDRLDDDURLDURLDUDURRLLLLRDDLDRUURURRRRDRRDLUULLURRDLLLDLDUUUDRDRULULRULUUDDULDUURRLRLRRDULDULDRUUDLLUDLLLLUDDULDLLDLLURLLLRUDRDLRUDLULDLLLUDRLRLUDLDRDURDDULDURLLRRRDUUDLRDDRUUDLUURLDRRRRRLDDUUDRURUDLLLRRULLRLDRUURRRRRLRLLUDDRLUDRRDUDUUUDRUDULRRULRDRRRDDRLUUUDRLLURURRLLDUDRUURDLRURLLRDUDUUDLLLUULLRULRLDLRDDDU"
codes[1]="DRRRDRUDRLDUUDLLLRLULLLUURLLRLDRLURDRDRDRLDUUULDRDDLDDDURURUDRUUURDRDURLRLUDRRRDURDRRRDULLRDRRLUUUURLRUULRRDUDDDDUURLDULUDLLLRULUDUURRDUULRRDDURLURRUDRDRLDLRLLULULURLRDLRRRUUURDDUUURDRDRUURUDLULDRDDULLLLLRLRLLUDDLULLUDDLRLRDLDULURDUDULRDDRLUDUUDUDRLLDRRLLDULLRLDURUDRLRRRDULUUUULRRLUDDDLDUUDULLUUURDRLLULRLDLLUUDLLUULUULUDLRRDDRLUUULDDRULDRLURUURDLURDDRULLLLDUDULUDURRDRLDDRRLRURLLRLLLLDURDLUULDLDDLULLLRDRRRDLLLUUDDDLDRRLUUUUUULDRULLLDUDLDLURLDUDULRRRULDLRRDRUUUUUURRDRUURLDDURDUURURULULLURLLLLUURDUDRRLRRLRLRRRRRULLDLLLRURRDULLDLLULLRDUULDUDUDULDURLRDLDRUUURLLDLLUUDURURUD"
codes[2]="UDUUUUURUDLLLRRRDRDRUDDRLLDRRLDRLLUURRULUULULRLLRUDDRLDRLUURDUDLURUULLLULLRRRULRLURRDDULLULULRUDDDUURDRLUDUURRRRUUULLRULLLDLURUDLDDLLRRRULDLLUURDRRRDRDURURLRUDLDLURDDRLLLUUDRUULLDLLLLUUDRRURLDDUDULUDLDURDLURUURDUUUURDLLLRUUURDUUUDLDUDDLUDDUDUDUDLDUDUUULDULUURDDLRRRULLUDRRDLUDULDURUURULLLLUDDDLURURLRLRDLRULRLULURRLLRDUDUDRULLRULRUDLURUDLLDUDLRDRLRDURURRULLDDLRLDDRLRDRRDLRDDLLLLDUURRULLRLLDDLDLURLRLLDULRURRRRDULRLRURURRULULDUURRDLURRDDLDLLLRULRLLURLRLLDDLRUDDDULDLDLRLURRULRRLULUDLDUDUDDLLUURDDDLULURRULDRRDDDUUURLLDRDURUDRUDLLDRUD"
codes[3]="ULRDULURRDDLULLDDLDDDRLDUURDLLDRRRDLLURDRUDDLDURUDRULRULRULULUULLLLDRLRLDRLLLLLRLRRLRLRRRDDULRRLUDLURLLRLLURDDRRDRUUUDLDLDRRRUDLRUDDRURRDUUUDUUULRLDDRDRDRULRLLDLDDLLRLUDLLLLUURLDLRUDRLRDRDRLRULRDDURRLRUDLRLRLDRUDURLRDLDULLUUULDRLRDDRDUDLLRUDDUDURRRRDLDURRUURDUULLDLRDUDDLUDDDRRRULRLULDRLDDRUURURLRRRURDURDRULLUUDURUDRDRLDLURDDDUDDURUDLRULULURRUULDRLDULRRRRDUULLRRRRLUDLRDDRLRUDLURRRDRDRLLLULLUULRDULRDLDUURRDULLRULRLRRURDDLDLLRUUDLRLDLRUUDLDDLLULDLUURRRLRDULRLRLDRLDUDURRRLLRUUDLUURRDLDDULDLULUUUUDRRULLLLLLUULDRULDLRUDDDRDRDDURUURLURRDLDDRUURULLULUUUDDLRDULDDLULDUDRU"
codes[4]="LRLRLRLLLRRLUULDDUUUURDULLLRURLDLDRURRRUUDDDULURDRRDURLRLUDLLULDRULLRRRDUUDDRDRULLDDULLLUURDLRLRUURRRLRDLDUDLLRLLURLRLLLDDDULUDUDRDLRRLUDDLRDDURRDRDUUULLUURURLRRDUURLRDLLUDURLRDRLURUURDRLULLUUUURRDDULDDDRULURUULLUDDDDLRURDLLDRURDUDRRLRLDLRRDDRRDDRUDRDLUDDDLUDLUDLRUDDUDRUDLLRURDLRUULRUURULUURLRDULDLDLLRDRDUDDDULRLDDDRDUDDRRRLRRLLRRRUUURRLDLLDRRDLULUUURUDLULDULLLDLULRLRDLDDDDDDDLRDRDUDLDLRLUDRRDRRDRUURDUDLDDLUDDDDDDRUURURUURLURLDULUDDLDDLRUUUULRDRLUDLDDLLLRLLDRRULULRLRDURRRLDDRDDRLU"

position=5


function move() {
    if [[ $position -eq 1 ]]; then
        if [[ $1 == 'D' ]]; then
            position=3
        fi
    elif [[ $position -eq 2 ]]; then
        if [[ $1 == 'R' ]]; then
            position=3
        elif [[ $1 == 'D' ]]; then
            position=6
        fi
    elif [[ $position -eq 3 ]]; then
        if [[ $1 == 'L' ]]; then
            position=2
        elif [[ $1 == 'R' ]]; then
            position=4
        elif [[ $1 == 'D' ]]; then
            position=7
        elif [[ $1 == 'U' ]]; then
            position=1
        fi
    elif [[ $position -eq 4 ]]; then
        if [[ $1 == 'L' ]]; then
            position=3
        elif [[ $1 == 'D' ]]; then
            position=8
        fi
    elif [[ $position -eq 5 ]]; then
        if [[ $1 == 'R' ]]; then
            position=6
        fi
    elif [[ $position -eq 6 ]]; then
        if [[ $1 == 'L' ]]; then
            position=5
        elif [[ $1 == 'R' ]]; then
            position=7
        elif [[ $1 == 'D' ]]; then
            position='A'
        elif [[ $1 == 'U' ]]; then
            position=2
        fi
    elif [[ $position -eq 7 ]]; then
        if [[ $1 == 'L' ]]; then
            position=6
        elif [[ $1 == 'R' ]]; then
            position=8
        elif [[ $1 == 'D' ]]; then
            position='B'
        elif [[ $1 == 'U' ]]; then
            position=3
        fi
    elif [[ $position -eq 8 ]]; then
        if [[ $1 == 'L' ]]; then
            position=7
        elif [[ $1 == 'R' ]]; then
            position=9
        elif [[ $1 == 'U' ]]; then
            position=4
        elif [[ $1 == 'D' ]]; then
            position='C'
        fi
    elif [[ $position -eq 9 ]]; then
        if [[ $1 == 'L' ]]; then
            position=8
        fi
    elif [[ $position == 'A' ]]; then
        if [[ $1 == 'U' ]]; then
            position=6
        elif [[ $1 == 'R' ]]; then
            position='B'
        fi
    elif [[ $position == 'B' ]]; then
        if [[ $1 == 'L' ]]; then
            position='A'
        elif [[ $1 == 'R' ]]; then
            position='C'
        elif [[ $1 == 'U' ]]; then
            position=7
        elif [[ $1 == 'D' ]]; then
            position='D'
        fi
    elif [[ $position == 'C' ]]; then
        if [[ $1 == 'L' ]]; then
            position='B'
        elif [[ $1 == 'U' ]]; then
            position=8
        fi
    elif [[ $position == 'D' ]]; then
        if [[ $1 == 'U' ]]; then
            position='B'
        fi
    fi
}


for moves in "${codes[@]}"; do
    while read -n 1 inst; do
        if [[ -z $inst ]]; then
            echo $position
            break
        fi
        move $inst
    done <<< $moves
done 

# Correct answer is B3C27